# -*- coding: utf-8 -*-
"""Soft_HW1__Q1_Q09_6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i3Vmni5Iw1yCeAk0bqs3991kdVkNXsAu

## <div dir=rtl>
<b><p align="justify"><font face = "IRLotus" size = "5">
ترسیم توابع فازی در سوال ۶-۹
</font><br />
</div>
"""

import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

x1 = np.arange(-1,2,0.01)
x2 = np.arange(-1,2,0.01)
n1 = len(x1)
n2 = len(x2)
f1_x = np.zeros((n1,n2))

for i in range(n1):
    for j in range(n2):
        mu_A1_x1 = (x1[i]>=-1 and x1[i]<=1)*(1-abs(x1[i]))
        mu_A1_x2 = (x2[i]>=-1 and x2[i]<=1)*(1-abs(x2[j]))
        mu_A2_x1 = (x1[i]>=0 and x1[i]<=2)*(1-abs(x1[i]-1))
        mu_A2_x2 = (x2[i]>=0 and x2[i]<=2)*(1-abs(x2[j]-1))

        P1 = mu_A1_x1 * mu_A2_x2
        P2 = mu_A1_x2 * mu_A2_x1

        if P1 >= P2:
            f1_x[i,j]=0
        else:
            f1_x[i,j]=1
            
x1,x2 = np.meshgrid(x1,x2)
f1_x = f1_x.T

fig = plt.figure()
ax = fig.gca(projection='3d')
ax.plot_surface(x1,x2,f1_x,cmap='viridis')
ax.set_xlabel('$x1$')
ax.set_ylabel('$x2$')
ax.set_zlabel('$f_1(x)$')
plt.grid(True)
plt.savefig('fuzzy96.svg')
plt.show()

import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
# import warnings
# warnings.filterwarnings('ignore')

x1 = np.arange(-1, 2, 0.01)
x2 = np.arange(-1, 2, 0.01)
n1 = len(x1)
n2 = len(x2)
f2_x = np.zeros((n1, n2))

for i in range(n1):
    for j in range(n2):
        mu_A1_x1 = (x1[i] >= -1 and x1[i] <= 1) * (1 - abs(x1[i]))
        mu_A1_x2 = (x2[i] >= -1 and x2[i] <= 1) * (1 - abs(x2[j]))
        mu_A2_x1 = (x1[i] >= 0 and x1[i] <= 2) * (1 - abs(x1[i] - 1))
        mu_A2_x2 = (x2[i] >= 0 and x2[i] <= 2) * (1 - abs(x2[j] - 1))
        
        P1 = mu_A1_x1 * mu_A2_x2
        P2 = mu_A1_x2 * mu_A2_x1
        f2_x[i, j] = P2 / (P1 + P2)

x1, x2 = np.meshgrid(x1, x2)
f2_x = f2_x.T

fig = plt.figure()
ax = fig.gca(projection='3d')
ax.plot_surface(x1,x2,f2_x,cmap='viridis')
ax.set_xlabel('$x1$')
ax.set_ylabel('$x2$')
ax.set_zlabel('$f_2(x)$')
plt.grid(True)
plt.savefig('fuzzy961.svg')
plt.show()

"""## <div dir=rtl>
<b><p align="justify"><font face = "IRLotus" size = "5">
ترسیم توابع تعلق در سوال ۶-۹
</font><br />
</div>
"""

import matplotlib.pyplot as plt

def membership1(u):
    if -1 <= u <= 1:
        return 1 - abs(u)
    else:
        return 0

def membership2(u):
    if 0 <= u <= 2:
        return 1 - abs(u-1)
    else:
        return 0

u = [i/100 for i in range(-100, 201)]
plt.plot(u, [membership1(i) for i in u], label='$\mu_{A_1}$')
plt.plot(u, [membership2(i) for i in u], label='$\mu_{A_2}$')
plt.text(0, 0, r'$\bar{y}^1=0$', fontsize=15)
plt.text(1, 0, r'$\bar{y}^2=1$', fontsize=15)
plt.legend()
plt.grid(True)
plt.savefig('fuzzy960.svg')
plt.show()